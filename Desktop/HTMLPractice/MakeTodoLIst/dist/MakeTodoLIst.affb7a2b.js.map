{"version":3,"sources":["../../../node_modules/symbol-observable/es/ponyfill.js","../../../node_modules/symbol-observable/es/index.js","../../../node_modules/redux/es/redux.js","storage.js","remove.js","create.js","index.js"],"names":["symbolObservablePonyfill","root","result","Symbol","observable","self","window","global","module","Function","randomString","Math","random","toString","substring","split","join","ActionTypes","INIT","REPLACE","PROBE_UNKNOWN_ACTION","isPlainObject","obj","Object","proto","getPrototypeOf","createStore","reducer","preloadedState","enhancer","_ref2","arguments","Error","undefined","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","slice","getState","subscribe","listener","isSubscribed","push","index","indexOf","splice","dispatch","action","type","listeners","i","length","replaceReducer","nextReducer","$$observable","_ref","outerSubscribe","observer","TypeError","observeState","next","unsubscribe","warning","message","console","error","e","getUndefinedStateErrorMessage","key","actionType","String","getUnexpectedStateShapeWarningMessage","inputState","reducers","unexpectedKeyCache","reducerKeys","keys","argumentName","call","match","unexpectedKeys","filter","hasOwnProperty","forEach","assertReducerShape","combineReducers","finalReducers","finalReducerKeys","shapeAssertionError","state","warningMessage","hasChanged","nextState","_i","_key","previousStateForKey","nextStateForKey","errorMessage","bindActionCreator","actionCreator","apply","bindActionCreators","actionCreators","boundActionCreators","_defineProperty","value","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","getOwnPropertySymbols","sym","getOwnPropertyDescriptor","_objectSpread2","target","source","getOwnPropertyDescriptors","defineProperties","compose","_len","funcs","Array","arg","reduce","a","b","applyMiddleware","middlewares","store","_dispatch","middlewareAPI","chain","map","middleware","isCrushed","getTime","time","hours","Date","getHours","minutes","getMinutes","AmOrPm","saveTodoList","now","localStorage","setItem","id","JSON","stringify","text","item","saveFinishID","arr","getItem","from","Set","removeItem","removeFinishID","finish","getTodoList","deleteTodoListLocal","deleteAllLocal","clear","clearBnt","document","getElementById","checkClear","querySelector","hasChildNodes","disabled","deleteTodoList","remove","deleteAll","todobox","removeChild","firstChild","todoBox","finishID","makeTodoList","list","createElement","includes","classList","add","todo","doneBnt","delBnt","parse","innerText","append","innerHTML","prepend","doneTodoList","temp","len","element","findListBox","contains","main","todoForm","input","inputBnt","showLocalStorage","order","ids","sort","ShowTodoList","showTodoList","addTodoList","removeTodoList","finishTodoList","removeAll","listID","AddList","listitem","RemoveList","DoneList","RemoveAll","initialState","done","all","lastkey","parseInt","render","addEventListener","preventDefault","currentValue","currentDeleteBnt","parentNode","background","confirm","cancle","ok"],"mappings":"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","file":"MakeTodoLIst.affb7a2b.js","sourceRoot":"..","sourcesContent":["export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","import $$observable from 'symbol-observable';\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error('It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error('You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected the listener to be a function.');\n    }\n\n    if (isDispatching) {\n      throw new Error('You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error('You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionDescription = actionType && \"action \\\"\" + String(actionType) + \"\\\"\" || 'an action';\n  return \"Given \" + actionDescription + \", reducer \\\"\" + key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\";\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle \" + ActionTypes.INIT + \" or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(\"bindActionCreators expected an object or a function, instead received \" + (actionCreators === null ? 'null' : typeof actionCreators) + \". \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    keys.push.apply(keys, Object.getOwnPropertySymbols(object));\n  }\n\n  if (enumerableOnly) keys = keys.filter(function (sym) {\n    return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n  });\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error('Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread2({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore };\n","function getTime() {\n  let time = '';\n  let hours = new Date().getHours();\n  let minutes = new Date().getMinutes();\n  let AmOrPm = hours >= 12 ? 'pm' : 'am';\n\n  hours = hours % 12 || 12;\n  hours = hours < 10 ? '0' + hours : hours;\n  minutes = minutes < 10 ? '0' + minutes : minutes;\n  time = hours + ':' + minutes + AmOrPm;\n  return time;\n}\n\nfunction saveTodoList(state) {\n  let now = getTime();\n  localStorage.setItem(\n    `${state.id}`,\n    JSON.stringify({ text: state.item, time: now })\n  );\n}\n\nfunction saveFinishID(arr) {\n  if (localStorage.getItem('finish') !== null) {\n    arr = Array.from(\n      new Set([...arr, ...localStorage.getItem('finish').split(',')])\n    );\n    localStorage.removeItem('finish');\n  }\n  localStorage.setItem('finish', arr);\n}\n\nfunction removeFinishID(id) {\n  if (localStorage.getItem('finish') !== null) {\n    let arr = localStorage.getItem('finish').split(',');\n    arr = arr.filter((finish) => finish !== id);\n    localStorage.removeItem('finish');\n    localStorage.setItem('finish', arr);\n  }\n}\n\nfunction getTodoList(id) {\n  return localStorage.getItem(`${id}`);\n}\n\nfunction deleteTodoListLocal(id) {\n  localStorage.removeItem(`${id}`);\n}\n\nfunction deleteAllLocal() {\n  localStorage.clear();\n}\n\nexport {\n  saveTodoList,\n  getTodoList,\n  deleteTodoListLocal,\n  deleteAllLocal,\n  saveFinishID,\n  removeFinishID,\n};\n","import { deleteTodoListLocal, deleteAllLocal, removeFinishID } from './storage';\n\nconst clearBnt = document.getElementById('clear');\n\nfunction checkClear() {\n  const todobox = document.querySelector('.todoBox');\n  if (!todobox.hasChildNodes()) {\n    clearBnt.disabled = true;\n    deleteAllLocal();\n  } else {\n    clearBnt.disabled = false;\n  }\n}\n\nfunction deleteTodoList(state) {\n  deleteTodoListLocal(state.id);\n  removeFinishID(state.id);\n  const box = document.getElementById(`${state.id}`);\n  box.remove();\n  checkClear();\n}\n\nfunction deleteAll() {\n  deleteAllLocal();\n  const todobox = document.querySelector('.todoBox');\n  while (todobox.hasChildNodes()) {\n    todobox.removeChild(todobox.firstChild);\n  }\n}\n\nexport { checkClear, deleteTodoList, deleteAll };\n","import {\n  saveTodoList,\n  getTodoList,\n  saveFinishID,\n  removeFinishID,\n} from './storage';\nimport { checkClear } from './remove';\n\nconst todoBox = document.querySelector('.todoBox');\nlet finishID = [];\n\nfunction makeTodoList(state) {\n  if (state.id > localStorage.key(localStorage.length - 1)) {\n    saveTodoList(state);\n  }\n  const list = getTodoList(state.id);\n\n  if (list !== null) {\n    const todobox = document.createElement('div');\n    todobox.id = state.id;\n    if (getTodoList('finish') && getTodoList('finish').includes(state.id)) {\n      todobox.classList.add('finish');\n    }\n    const todo = document.createElement('span');\n    const doneBnt = document.createElement('button');\n    const delBnt = document.createElement('button');\n    const now = `<span id=\"stampTime\">${\n      JSON.parse(localStorage.getItem(`${state.id}`)).time\n    }</span>`;\n    todo.innerText = JSON.parse(localStorage.getItem(`${state.id}`)).text;\n    doneBnt.innerText = '✔︎';\n    doneBnt.id = 'done';\n    delBnt.innerText = '❌';\n    delBnt.id = 'remove';\n    todobox.append(todo);\n    todobox.innerHTML += now;\n    todobox.prepend(doneBnt);\n    todobox.append(delBnt);\n    todoBox.prepend(todobox);\n  }\n  checkClear();\n}\n\nfunction doneTodoList(state) {\n  let temp = [];\n  for (let i = 0, len = localStorage.length; i < len; ++i) {\n    temp.push(localStorage.key(i));\n  }\n  finishID = finishID.filter((element) => temp.includes(element));\n  const findListBox = document.getElementById(`${state.id}`);\n  if (findListBox.classList.contains('finish')) {\n    findListBox.classList.remove('finish');\n    finishID = finishID.filter((finish) => finish !== state.id);\n    removeFinishID(state.id);\n  } else {\n    findListBox.classList.add('finish');\n    finishID.push(state.id);\n    saveFinishID(finishID);\n  }\n}\n\nexport { makeTodoList, doneTodoList };\n","import { createStore } from 'redux';\nimport { makeTodoList, doneTodoList } from './create';\nimport { checkClear, deleteTodoList, deleteAll } from './remove';\n\n//DOM 레퍼런스 작성\nconst main = document.querySelector('.glass'),\n  todoForm = document.getElementById('inputForm'),\n  input = todoForm.querySelector('input'),\n  inputBnt = todoForm.querySelector('button'),\n  todoBox = document.querySelector('.todoBox'),\n  clear = document.getElementById('clear');\n\nfunction showLocalStorage() {\n  let order = [];\n  if (localStorage.length !== 0) {\n    for (let i = 0, len = localStorage.length; i < len; ++i) {\n      order.push(localStorage.key(i));\n    }\n    order = order.filter((ids) => ids !== 'finish');\n    order.sort((a, b) => a - b);\n    order.forEach((element) => store.dispatch(ShowTodoList(element)));\n  }\n}\n\n//액션 정의\nconst showTodoList = 'showTodoList';\nconst addTodoList = 'addTodoList';\nconst removeTodoList = 'removeTodoList';\nconst finishTodoList = 'finishTodoList';\nconst removeAll = 'removeAll';\n\n//액션 함수 정의\nconst ShowTodoList = (listID) => ({ type: showTodoList, listID });\nconst AddList = (listitem) => ({ type: addTodoList, listitem });\nconst RemoveList = (listID) => ({ type: removeTodoList, listID });\nconst DoneList = (listID) => ({ type: finishTodoList, listID });\nconst RemoveAll = () => ({ type: removeAll });\n\n//초기값 설정\nconst initialState = {\n  id: 0,\n  item: '',\n  add: false,\n  remove: false,\n  done: false,\n  all: false,\n  lastkey: 0,\n};\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case showTodoList:\n      return {\n        ...state,\n        id: action.listID,\n        item: JSON.parse(localStorage.getItem(`${action.listID}`)).text,\n        add: true,\n        remove: false,\n        done: false,\n        all: false,\n        lastkey: action.listID,\n      };\n    case addTodoList:\n      return {\n        ...state,\n        id: parseInt(state.lastkey) + 1,\n        item: action.listitem,\n        add: true,\n        remove: false,\n        done: false,\n        all: false,\n        lastkey: parseInt(state.lastkey) + 1,\n      };\n    case removeTodoList:\n      return {\n        ...state,\n        id: action.listID,\n        add: false,\n        remove: true,\n        done: false,\n        all: false,\n        lastkey: state.lastkey,\n      };\n    case finishTodoList:\n      return {\n        ...state,\n        id: action.listID,\n        add: false,\n        remove: false,\n        done: true,\n        all: false,\n        lastkey: state.lastkey,\n      };\n    case removeAll:\n      return {\n        ...state,\n        add: false,\n        remove: false,\n        done: false,\n        all: true,\n        lastkey: 0,\n      };\n    default:\n      return state;\n  }\n}\n\nconst store = createStore(reducer);\n\nconst render = () => {\n  const state = store.getState();\n  //makeTodoList(state);\n  const { add, remove, done, all } = state;\n  if (add) {\n    makeTodoList(state);\n  } else if (remove) {\n    deleteTodoList(state);\n  } else if (done) {\n    doneTodoList(state);\n  } else if (all) {\n    deleteAll();\n  } else {\n  }\n};\n\nrender();\nstore.subscribe(render);\n\ntodoForm.addEventListener(\n  'submit',\n  (e) => {\n    e.preventDefault();\n    const currentValue = input.value;\n    store.dispatch(AddList(currentValue));\n    input.value = '';\n  },\n  false\n);\n\ntodoBox.addEventListener(\n  'click',\n  (e) => {\n    if (e.target.id === 'remove') {\n      const currentDeleteBnt = e.target.parentNode.id;\n      store.dispatch(RemoveList(currentDeleteBnt));\n    } else if (e.target.id === 'done') {\n      const currentDeleteBnt = e.target.parentNode.id;\n      store.dispatch(DoneList(currentDeleteBnt));\n    }\n  },\n  false\n);\n\nclear.addEventListener('click', (e) => {\n  const background = document.createElement('div');\n  background.id = 'confirm_bg';\n  const confirm = document.createElement('div');\n  confirm.id = 'confirm';\n  confirm.innerHTML +=\n    '<div>작성하신 ToDo 리스트를 정말 다 지우시겠어요? <br>맞다면 확인을, 아니라면 취소를 눌러주세요.</div>';\n  confirm.innerHTML += '<button id=\"cancle\">취소</button>';\n  confirm.innerHTML += '<button id=\"ok\">확인</button>';\n  main.append(confirm);\n  main.append(background);\n  const cancle = document.getElementById('cancle');\n  const ok = document.getElementById('ok');\n  cancle.addEventListener(\n    'click',\n    (e) => {\n      confirm.remove();\n      background.remove();\n    },\n    false\n  );\n  ok.addEventListener(\n    'click',\n    (e) => {\n      store.dispatch(RemoveAll());\n      confirm.remove();\n      background.remove();\n      checkClear();\n    },\n    false\n  );\n});\n\nshowLocalStorage();\ncheckClear();\n"]}